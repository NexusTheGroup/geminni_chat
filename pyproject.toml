[project]
name = "nexus_knowledge"
version = "0.1.0"
description = "Core Python backend for the NexusKnowledge system."
requires-python = ">=3.11"
dependencies = [
    "celery[redis]",
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "sqlalchemy>=2.0.28",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9",
    "pydantic>=2.6.0",
    "python-dotenv>=1.0.1",
    "mlflow>=2.10.0",
    "dvc[ssh]>=3.48.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "A", # flake8-builtins
    "COM", # flake8-commas
    "D", # pydocstyle
    "ERA", # eradicate
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "RET", # flake8-return
    "RSE", # flake8-raise
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
    "YTT", # flake8-type-checking
    "EXE", # flake8-executable
    "NPY", # numpy-specific-checks
    "PD", # pandas-vet
    "PERF", # perflint
    "PGH", # pygrep-hooks
    "PL", # pylint
    "RUF", # ruff-specific-rules
    "S", # flake8-bandit
    "T", # flake8-print
    # Removed unsupported selectors: V (variables-names), WPS (wemake)
]
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D213", # Disable some pydocstyle rules
    "E501", # Line too long, handled by black
]
unfixable = ["T20"] # Don't auto-fix print statements

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",  # allow asserts in tests
    "ANN",   # relax type annotations in tests
    "PLR2004", # magic values in tests
]
"src/main.py" = ["T201"]  # allow prints for demo CLI
"src/nexus_knowledge/mcp/**" = [
    "S603",  # subprocess calls are expected in MCP servers
    "S607",  # partial executable paths are acceptable for system tools
    "PLR2004", # magic values for HTTP status codes are acceptable
    "C901",  # complex functions are acceptable for debugging tools
    "PERF401", # list comprehensions vs loops are acceptable
    "RET505", # unnecessary else after return is acceptable
    "E722",  # bare except is acceptable for debugging
]
